/**
 * This class is generated by jOOQ
 */
package org.jooq.util.crate.sys.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.util.crate.sys.Sys;
import org.jooq.util.crate.sys.tables.records.OperationsLogRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OperationsLog extends TableImpl<OperationsLogRecord> {

    private static final long serialVersionUID = -1330283317;

    /**
     * The reference instance of <code>sys.operations_log</code>
     */
    public static final OperationsLog OPERATIONS_LOG = new OperationsLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OperationsLogRecord> getRecordType() {
        return OperationsLogRecord.class;
    }

    /**
     * The column <code>sys.operations_log.ended</code>.
     */
    public final TableField<OperationsLogRecord, Timestamp> ENDED = createField("ended", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sys.operations_log.error</code>.
     */
    public final TableField<OperationsLogRecord, String> ERROR = createField("error", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>sys.operations_log.id</code>.
     */
    public final TableField<OperationsLogRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>sys.operations_log.job_id</code>.
     */
    public final TableField<OperationsLogRecord, String> JOB_ID = createField("job_id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>sys.operations_log.name</code>.
     */
    public final TableField<OperationsLogRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>sys.operations_log.started</code>.
     */
    public final TableField<OperationsLogRecord, Timestamp> STARTED = createField("started", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sys.operations_log.used_bytes</code>.
     */
    public final TableField<OperationsLogRecord, Long> USED_BYTES = createField("used_bytes", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>sys.operations_log</code> table reference
     */
    public OperationsLog() {
        this("operations_log", null);
    }

    /**
     * Create an aliased <code>sys.operations_log</code> table reference
     */
    public OperationsLog(String alias) {
        this(alias, OPERATIONS_LOG);
    }

    private OperationsLog(String alias, Table<OperationsLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private OperationsLog(String alias, Table<OperationsLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OperationsLog as(String alias) {
        return new OperationsLog(alias, this);
    }

    /**
     * Rename this table
     */
    public OperationsLog rename(String name) {
        return new OperationsLog(name, null);
    }
}
