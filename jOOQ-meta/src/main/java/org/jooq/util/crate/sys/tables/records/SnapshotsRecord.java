/**
 * This class is generated by jOOQ
 */
package org.jooq.util.crate.sys.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record11;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.util.crate.sys.tables.Snapshots;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SnapshotsRecord extends UpdatableRecordImpl<SnapshotsRecord> implements Record7<String[], Timestamp, String, String, Timestamp, String, String> {

    private static final long serialVersionUID = 114493150;

    /**
     * Setter for <code>sys.snapshots.concrete_indices</code>.
     */
    public void setConcreteIndices(String[] value) {
        setValue(0, value);
    }

    /**
     * Getter for <code>sys.snapshots.concrete_indices</code>.
     */
    public String[] getConcreteIndices() {
        return (String[]) getValue(0);
    }

    /**
     * Setter for <code>sys.snapshots.finished</code>.
     */
    public void setFinished(Timestamp value) {
        setValue(1, value);
    }

    /**
     * Getter for <code>sys.snapshots.finished</code>.
     */
    public Timestamp getFinished() {
        return (Timestamp) getValue(1);
    }

    /**
     * Setter for <code>sys.snapshots.name</code>.
     */
    public void setName(String value) {
        setValue(2, value);
    }

    /**
     * Getter for <code>sys.snapshots.name</code>.
     */
    public String getName() {
        return (String) getValue(2);
    }

    /**
     * Setter for <code>sys.snapshots.repository</code>.
     */
    public void setRepository(String value) {
        setValue(3, value);
    }

    /**
     * Getter for <code>sys.snapshots.repository</code>.
     */
    public String getRepository() {
        return (String) getValue(3);
    }

    /**
     * Setter for <code>sys.snapshots.started</code>.
     */
    public void setStarted(Timestamp value) {
        setValue(4, value);
    }

    /**
     * Getter for <code>sys.snapshots.started</code>.
     */
    public Timestamp getStarted() {
        return (Timestamp) getValue(4);
    }

    /**
     * Setter for <code>sys.snapshots.state</code>.
     */
    public void setState(String value) {
        setValue(5, value);
    }

    /**
     * Getter for <code>sys.snapshots.state</code>.
     */
    public String getState() {
        return (String) getValue(5);
    }

    /**
     * Setter for <code>sys.snapshots.version</code>.
     */
    public void setVersion(String value) {
        setValue(6, value);
    }

    /**
     * Getter for <code>sys.snapshots.version</code>.
     */
    public String getVersion() {
        return (String) getValue(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record11<String, String, String, Integer, String, String, String, Integer, String, String, String> key() {
        return (Record11) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String[], Timestamp, String, String, Timestamp, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String[], Timestamp, String, String, Timestamp, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field1() {
        return Snapshots.SNAPSHOTS.CONCRETE_INDICES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return Snapshots.SNAPSHOTS.FINISHED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Snapshots.SNAPSHOTS.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Snapshots.SNAPSHOTS.REPOSITORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return Snapshots.SNAPSHOTS.STARTED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Snapshots.SNAPSHOTS.STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Snapshots.SNAPSHOTS.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value1() {
        return getConcreteIndices();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getFinished();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getRepository();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getStarted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SnapshotsRecord value1(String[] value) {
        setConcreteIndices(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SnapshotsRecord value2(Timestamp value) {
        setFinished(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SnapshotsRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SnapshotsRecord value4(String value) {
        setRepository(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SnapshotsRecord value5(Timestamp value) {
        setStarted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SnapshotsRecord value6(String value) {
        setState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SnapshotsRecord value7(String value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SnapshotsRecord values(String[] value1, Timestamp value2, String value3, String value4, Timestamp value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SnapshotsRecord
     */
    public SnapshotsRecord() {
        super(Snapshots.SNAPSHOTS);
    }

    /**
     * Create a detached, initialised SnapshotsRecord
     */
    public SnapshotsRecord(String[] concreteIndices, Timestamp finished, String name, String repository, Timestamp started, String state, String version) {
        super(Snapshots.SNAPSHOTS);

        setValue(0, concreteIndices);
        setValue(1, finished);
        setValue(2, name);
        setValue(3, repository);
        setValue(4, started);
        setValue(5, state);
        setValue(6, version);
    }
}
