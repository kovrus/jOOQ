/**
 * This class is generated by jOOQ
 */
package org.jooq.util.crate.sys.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;
import org.jooq.util.crate.sys.tables.Checks;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChecksRecord extends TableRecordImpl<ChecksRecord> implements Record4<String, Integer, Boolean, Integer> {

    private static final long serialVersionUID = 642523420;

    /**
     * Setter for <code>sys.checks.description</code>.
     */
    public void setDescription(String value) {
        setValue(0, value);
    }

    /**
     * Getter for <code>sys.checks.description</code>.
     */
    public String getDescription() {
        return (String) getValue(0);
    }

    /**
     * Setter for <code>sys.checks.id</code>.
     */
    public void setId(Integer value) {
        setValue(1, value);
    }

    /**
     * Getter for <code>sys.checks.id</code>.
     */
    public Integer getId() {
        return (Integer) getValue(1);
    }

    /**
     * Setter for <code>sys.checks.passed</code>.
     */
    public void setPassed(Boolean value) {
        setValue(2, value);
    }

    /**
     * Getter for <code>sys.checks.passed</code>.
     */
    public Boolean getPassed() {
        return (Boolean) getValue(2);
    }

    /**
     * Setter for <code>sys.checks.severity</code>.
     */
    public void setSeverity(Integer value) {
        setValue(3, value);
    }

    /**
     * Getter for <code>sys.checks.severity</code>.
     */
    public Integer getSeverity() {
        return (Integer) getValue(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, Integer, Boolean, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, Integer, Boolean, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Checks.CHECKS.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Checks.CHECKS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field3() {
        return Checks.CHECKS.PASSED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Checks.CHECKS.SEVERITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value3() {
        return getPassed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getSeverity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChecksRecord value1(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChecksRecord value2(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChecksRecord value3(Boolean value) {
        setPassed(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChecksRecord value4(Integer value) {
        setSeverity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChecksRecord values(String value1, Integer value2, Boolean value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChecksRecord
     */
    public ChecksRecord() {
        super(Checks.CHECKS);
    }

    /**
     * Create a detached, initialised ChecksRecord
     */
    public ChecksRecord(String description, Integer id, Boolean passed, Integer severity) {
        super(Checks.CHECKS);

        setValue(0, description);
        setValue(1, id);
        setValue(2, passed);
        setValue(3, severity);
    }
}
