/**
 * This class is generated by jOOQ
 */
package org.jooq.util.crate.sys.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.util.crate.sys.Sys;
import org.jooq.util.crate.sys.tables.records.NodesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Nodes extends TableImpl<NodesRecord> {

    private static final long serialVersionUID = -1366791971;

    /**
     * The reference instance of <code>sys.nodes</code>
     */
    public static final Nodes NODES = new Nodes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NodesRecord> getRecordType() {
        return NodesRecord.class;
    }

    /**
     * The column <code>sys.nodes.fs</code>.
     */
    public final TableField<NodesRecord, Object> FS = createField("fs", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>sys.nodes.fs['data']</code>.
     */
    public final TableField<NodesRecord, Object> FS_5b_27DATA_27_5d = createField("fs['data']", org.jooq.impl.DefaultDataType.getDefaultDataType("object_array"), this, "");

    /**
     * The column <code>sys.nodes.fs['data']['dev']</code>.
     */
    public final TableField<NodesRecord, String> FS_5b_27DATA_27_5d_5b_27DEV_27_5d = createField("fs['data']['dev']", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>sys.nodes.fs['data']['path']</code>.
     */
    public final TableField<NodesRecord, String> FS_5b_27DATA_27_5d_5b_27PATH_27_5d = createField("fs['data']['path']", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>sys.nodes.fs['disks']</code>.
     */
    public final TableField<NodesRecord, Object> FS_5b_27DISKS_27_5d = createField("fs['disks']", org.jooq.impl.DefaultDataType.getDefaultDataType("object_array"), this, "");

    /**
     * The column <code>sys.nodes.fs['disks']['available']</code>.
     */
    public final TableField<NodesRecord, Long> FS_5b_27DISKS_27_5d_5b_27AVAILABLE_27_5d = createField("fs['disks']['available']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.fs['disks']['bytes_read']</code>.
     */
    public final TableField<NodesRecord, Long> FS_5b_27DISKS_27_5d_5b_27BYTES_READ_27_5d = createField("fs['disks']['bytes_read']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.fs['disks']['bytes_written']</code>.
     */
    public final TableField<NodesRecord, Long> FS_5b_27DISKS_27_5d_5b_27BYTES_WRITTEN_27_5d = createField("fs['disks']['bytes_written']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.fs['disks']['dev']</code>.
     */
    public final TableField<NodesRecord, String> FS_5b_27DISKS_27_5d_5b_27DEV_27_5d = createField("fs['disks']['dev']", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>sys.nodes.fs['disks']['reads']</code>.
     */
    public final TableField<NodesRecord, Long> FS_5b_27DISKS_27_5d_5b_27READS_27_5d = createField("fs['disks']['reads']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.fs['disks']['size']</code>.
     */
    public final TableField<NodesRecord, Long> FS_5b_27DISKS_27_5d_5b_27SIZE_27_5d = createField("fs['disks']['size']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.fs['disks']['used']</code>.
     */
    public final TableField<NodesRecord, Long> FS_5b_27DISKS_27_5d_5b_27USED_27_5d = createField("fs['disks']['used']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.fs['disks']['writes']</code>.
     */
    public final TableField<NodesRecord, Long> FS_5b_27DISKS_27_5d_5b_27WRITES_27_5d = createField("fs['disks']['writes']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.fs['total']</code>.
     */
    public final TableField<NodesRecord, Object> FS_5b_27TOTAL_27_5d = createField("fs['total']", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>sys.nodes.fs['total']['available']</code>.
     */
    public final TableField<NodesRecord, Long> FS_5b_27TOTAL_27_5d_5b_27AVAILABLE_27_5d = createField("fs['total']['available']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.fs['total']['bytes_read']</code>.
     */
    public final TableField<NodesRecord, Long> FS_5b_27TOTAL_27_5d_5b_27BYTES_READ_27_5d = createField("fs['total']['bytes_read']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.fs['total']['bytes_written']</code>.
     */
    public final TableField<NodesRecord, Long> FS_5b_27TOTAL_27_5d_5b_27BYTES_WRITTEN_27_5d = createField("fs['total']['bytes_written']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.fs['total']['reads']</code>.
     */
    public final TableField<NodesRecord, Long> FS_5b_27TOTAL_27_5d_5b_27READS_27_5d = createField("fs['total']['reads']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.fs['total']['size']</code>.
     */
    public final TableField<NodesRecord, Long> FS_5b_27TOTAL_27_5d_5b_27SIZE_27_5d = createField("fs['total']['size']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.fs['total']['used']</code>.
     */
    public final TableField<NodesRecord, Long> FS_5b_27TOTAL_27_5d_5b_27USED_27_5d = createField("fs['total']['used']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.fs['total']['writes']</code>.
     */
    public final TableField<NodesRecord, Long> FS_5b_27TOTAL_27_5d_5b_27WRITES_27_5d = createField("fs['total']['writes']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.heap</code>.
     */
    public final TableField<NodesRecord, Object> HEAP = createField("heap", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>sys.nodes.heap['free']</code>.
     */
    public final TableField<NodesRecord, Long> HEAP_5b_27FREE_27_5d = createField("heap['free']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.heap['max']</code>.
     */
    public final TableField<NodesRecord, Long> HEAP_5b_27MAX_27_5d = createField("heap['max']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.heap['probe_timestamp']</code>.
     */
    public final TableField<NodesRecord, Timestamp> HEAP_5b_27PROBE_TIMESTAMP_27_5d = createField("heap['probe_timestamp']", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sys.nodes.heap['used']</code>.
     */
    public final TableField<NodesRecord, Long> HEAP_5b_27USED_27_5d = createField("heap['used']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.hostname</code>.
     */
    public final TableField<NodesRecord, String> HOSTNAME = createField("hostname", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>sys.nodes.id</code>.
     */
    public final TableField<NodesRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>sys.nodes.load</code>.
     */
    public final TableField<NodesRecord, Object> LOAD = createField("load", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>sys.nodes.load['1']</code>.
     */
    public final TableField<NodesRecord, Double> LOAD_5b_271_27_5d = createField("load['1']", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>sys.nodes.load['15']</code>.
     */
    public final TableField<NodesRecord, Double> LOAD_5b_2715_27_5d = createField("load['15']", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>sys.nodes.load['5']</code>.
     */
    public final TableField<NodesRecord, Double> LOAD_5b_275_27_5d = createField("load['5']", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>sys.nodes.load['probe_timestamp']</code>.
     */
    public final TableField<NodesRecord, Timestamp> LOAD_5b_27PROBE_TIMESTAMP_27_5d = createField("load['probe_timestamp']", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sys.nodes.mem</code>.
     */
    public final TableField<NodesRecord, Object> MEM = createField("mem", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>sys.nodes.mem['free']</code>.
     */
    public final TableField<NodesRecord, Long> MEM_5b_27FREE_27_5d = createField("mem['free']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.mem['free_percent']</code>.
     */
    public final TableField<NodesRecord, Short> MEM_5b_27FREE_PERCENT_27_5d = createField("mem['free_percent']", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>sys.nodes.mem['probe_timestamp']</code>.
     */
    public final TableField<NodesRecord, Timestamp> MEM_5b_27PROBE_TIMESTAMP_27_5d = createField("mem['probe_timestamp']", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sys.nodes.mem['used']</code>.
     */
    public final TableField<NodesRecord, Long> MEM_5b_27USED_27_5d = createField("mem['used']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.mem['used_percent']</code>.
     */
    public final TableField<NodesRecord, Short> MEM_5b_27USED_PERCENT_27_5d = createField("mem['used_percent']", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>sys.nodes.name</code>.
     */
    public final TableField<NodesRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>sys.nodes.network</code>.
     */
    public final TableField<NodesRecord, Object> NETWORK = createField("network", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>sys.nodes.network['probe_timestamp']</code>.
     */
    public final TableField<NodesRecord, Timestamp> NETWORK_5b_27PROBE_TIMESTAMP_27_5d = createField("network['probe_timestamp']", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sys.nodes.network['tcp']</code>.
     */
    public final TableField<NodesRecord, Object> NETWORK_5b_27TCP_27_5d = createField("network['tcp']", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>sys.nodes.network['tcp']['connections']</code>.
     */
    public final TableField<NodesRecord, Object> NETWORK_5b_27TCP_27_5d_5b_27CONNECTIONS_27_5d = createField("network['tcp']['connections']", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>sys.nodes.network['tcp']['connections']['accepted']</code>.
     */
    public final TableField<NodesRecord, Long> NETWORK_5b_27TCP_27_5d_5b_27CONNECTIONS_27_5d_5b_27ACCEPTED_27_5d = createField("network['tcp']['connections']['accepted']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.network['tcp']['connections']['curr_established']</code>.
     */
    public final TableField<NodesRecord, Long> NETWORK_5b_27TCP_27_5d_5b_27CONNECTIONS_27_5d_5b_27CURR_ESTABLISHED_27_5d = createField("network['tcp']['connections']['curr_established']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.network['tcp']['connections']['dropped']</code>.
     */
    public final TableField<NodesRecord, Long> NETWORK_5b_27TCP_27_5d_5b_27CONNECTIONS_27_5d_5b_27DROPPED_27_5d = createField("network['tcp']['connections']['dropped']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.network['tcp']['connections']['embryonic_dropped']</code>.
     */
    public final TableField<NodesRecord, Long> NETWORK_5b_27TCP_27_5d_5b_27CONNECTIONS_27_5d_5b_27EMBRYONIC_DROPPED_27_5d = createField("network['tcp']['connections']['embryonic_dropped']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.network['tcp']['connections']['initiated']</code>.
     */
    public final TableField<NodesRecord, Long> NETWORK_5b_27TCP_27_5d_5b_27CONNECTIONS_27_5d_5b_27INITIATED_27_5d = createField("network['tcp']['connections']['initiated']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.network['tcp']['packets']</code>.
     */
    public final TableField<NodesRecord, Object> NETWORK_5b_27TCP_27_5d_5b_27PACKETS_27_5d = createField("network['tcp']['packets']", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>sys.nodes.network['tcp']['packets']['errors_received']</code>.
     */
    public final TableField<NodesRecord, Long> NETWORK_5b_27TCP_27_5d_5b_27PACKETS_27_5d_5b_27ERRORS_RECEIVED_27_5d = createField("network['tcp']['packets']['errors_received']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.network['tcp']['packets']['received']</code>.
     */
    public final TableField<NodesRecord, Long> NETWORK_5b_27TCP_27_5d_5b_27PACKETS_27_5d_5b_27RECEIVED_27_5d = createField("network['tcp']['packets']['received']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.network['tcp']['packets']['retransmitted']</code>.
     */
    public final TableField<NodesRecord, Long> NETWORK_5b_27TCP_27_5d_5b_27PACKETS_27_5d_5b_27RETRANSMITTED_27_5d = createField("network['tcp']['packets']['retransmitted']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.network['tcp']['packets']['rst_sent']</code>.
     */
    public final TableField<NodesRecord, Long> NETWORK_5b_27TCP_27_5d_5b_27PACKETS_27_5d_5b_27RST_SENT_27_5d = createField("network['tcp']['packets']['rst_sent']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.network['tcp']['packets']['sent']</code>.
     */
    public final TableField<NodesRecord, Long> NETWORK_5b_27TCP_27_5d_5b_27PACKETS_27_5d_5b_27SENT_27_5d = createField("network['tcp']['packets']['sent']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.os</code>.
     */
    public final TableField<NodesRecord, Object> OS = createField("os", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>sys.nodes.os['cpu']</code>.
     */
    public final TableField<NodesRecord, Object> OS_5b_27CPU_27_5d = createField("os['cpu']", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>sys.nodes.os['cpu']['idle']</code>.
     */
    public final TableField<NodesRecord, Short> OS_5b_27CPU_27_5d_5b_27IDLE_27_5d = createField("os['cpu']['idle']", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>sys.nodes.os['cpu']['stolen']</code>.
     */
    public final TableField<NodesRecord, Short> OS_5b_27CPU_27_5d_5b_27STOLEN_27_5d = createField("os['cpu']['stolen']", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>sys.nodes.os['cpu']['system']</code>.
     */
    public final TableField<NodesRecord, Short> OS_5b_27CPU_27_5d_5b_27SYSTEM_27_5d = createField("os['cpu']['system']", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>sys.nodes.os['cpu']['used']</code>.
     */
    public final TableField<NodesRecord, Short> OS_5b_27CPU_27_5d_5b_27USED_27_5d = createField("os['cpu']['used']", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>sys.nodes.os['cpu']['user']</code>.
     */
    public final TableField<NodesRecord, Short> OS_5b_27CPU_27_5d_5b_27USER_27_5d = createField("os['cpu']['user']", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>sys.nodes.os['probe_timestamp']</code>.
     */
    public final TableField<NodesRecord, Timestamp> OS_5b_27PROBE_TIMESTAMP_27_5d = createField("os['probe_timestamp']", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sys.nodes.os['timestamp']</code>.
     */
    public final TableField<NodesRecord, Timestamp> OS_5b_27TIMESTAMP_27_5d = createField("os['timestamp']", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sys.nodes.os['uptime']</code>.
     */
    public final TableField<NodesRecord, Long> OS_5b_27UPTIME_27_5d = createField("os['uptime']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.os_info</code>.
     */
    public final TableField<NodesRecord, Object> OS_INFO = createField("os_info", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>sys.nodes.os_info['arch']</code>.
     */
    public final TableField<NodesRecord, String> OS_INFO_5b_27ARCH_27_5d = createField("os_info['arch']", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>sys.nodes.os_info['available_processors']</code>.
     */
    public final TableField<NodesRecord, Integer> OS_INFO_5b_27AVAILABLE_PROCESSORS_27_5d = createField("os_info['available_processors']", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>sys.nodes.os_info['jvm']</code>.
     */
    public final TableField<NodesRecord, Object> OS_INFO_5b_27JVM_27_5d = createField("os_info['jvm']", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>sys.nodes.os_info['jvm']['version']</code>.
     */
    public final TableField<NodesRecord, String> OS_INFO_5b_27JVM_27_5d_5b_27VERSION_27_5d = createField("os_info['jvm']['version']", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>sys.nodes.os_info['jvm']['vm_name']</code>.
     */
    public final TableField<NodesRecord, String> OS_INFO_5b_27JVM_27_5d_5b_27VM_NAME_27_5d = createField("os_info['jvm']['vm_name']", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>sys.nodes.os_info['jvm']['vm_vendor']</code>.
     */
    public final TableField<NodesRecord, String> OS_INFO_5b_27JVM_27_5d_5b_27VM_VENDOR_27_5d = createField("os_info['jvm']['vm_vendor']", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>sys.nodes.os_info['jvm']['vm_version']</code>.
     */
    public final TableField<NodesRecord, String> OS_INFO_5b_27JVM_27_5d_5b_27VM_VERSION_27_5d = createField("os_info['jvm']['vm_version']", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>sys.nodes.os_info['name']</code>.
     */
    public final TableField<NodesRecord, String> OS_INFO_5b_27NAME_27_5d = createField("os_info['name']", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>sys.nodes.os_info['version']</code>.
     */
    public final TableField<NodesRecord, String> OS_INFO_5b_27VERSION_27_5d = createField("os_info['version']", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>sys.nodes.port</code>.
     */
    public final TableField<NodesRecord, Object> PORT = createField("port", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>sys.nodes.port['http']</code>.
     */
    public final TableField<NodesRecord, Integer> PORT_5b_27HTTP_27_5d = createField("port['http']", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>sys.nodes.port['transport']</code>.
     */
    public final TableField<NodesRecord, Integer> PORT_5b_27TRANSPORT_27_5d = createField("port['transport']", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>sys.nodes.process</code>.
     */
    public final TableField<NodesRecord, Object> PROCESS = createField("process", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>sys.nodes.process['cpu']</code>.
     */
    public final TableField<NodesRecord, Object> PROCESS_5b_27CPU_27_5d = createField("process['cpu']", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>sys.nodes.process['cpu']['percent']</code>.
     */
    public final TableField<NodesRecord, Short> PROCESS_5b_27CPU_27_5d_5b_27PERCENT_27_5d = createField("process['cpu']['percent']", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>sys.nodes.process['cpu']['system']</code>.
     */
    public final TableField<NodesRecord, Long> PROCESS_5b_27CPU_27_5d_5b_27SYSTEM_27_5d = createField("process['cpu']['system']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.process['cpu']['user']</code>.
     */
    public final TableField<NodesRecord, Long> PROCESS_5b_27CPU_27_5d_5b_27USER_27_5d = createField("process['cpu']['user']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.process['max_open_file_descriptors']</code>.
     */
    public final TableField<NodesRecord, Long> PROCESS_5b_27MAX_OPEN_FILE_DESCRIPTORS_27_5d = createField("process['max_open_file_descriptors']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.process['open_file_descriptors']</code>.
     */
    public final TableField<NodesRecord, Long> PROCESS_5b_27OPEN_FILE_DESCRIPTORS_27_5d = createField("process['open_file_descriptors']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.process['probe_timestamp']</code>.
     */
    public final TableField<NodesRecord, Timestamp> PROCESS_5b_27PROBE_TIMESTAMP_27_5d = createField("process['probe_timestamp']", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sys.nodes.rest_url</code>.
     */
    public final TableField<NodesRecord, String> REST_URL = createField("rest_url", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>sys.nodes.thread_pools</code>.
     */
    public final TableField<NodesRecord, Object> THREAD_POOLS = createField("thread_pools", org.jooq.impl.DefaultDataType.getDefaultDataType("object_array"), this, "");

    /**
     * The column <code>sys.nodes.thread_pools['active']</code>.
     */
    public final TableField<NodesRecord, Integer> THREAD_POOLS_5b_27ACTIVE_27_5d = createField("thread_pools['active']", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>sys.nodes.thread_pools['completed']</code>.
     */
    public final TableField<NodesRecord, Long> THREAD_POOLS_5b_27COMPLETED_27_5d = createField("thread_pools['completed']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.thread_pools['largest']</code>.
     */
    public final TableField<NodesRecord, Integer> THREAD_POOLS_5b_27LARGEST_27_5d = createField("thread_pools['largest']", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>sys.nodes.thread_pools['name']</code>.
     */
    public final TableField<NodesRecord, String> THREAD_POOLS_5b_27NAME_27_5d = createField("thread_pools['name']", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>sys.nodes.thread_pools['queue']</code>.
     */
    public final TableField<NodesRecord, Integer> THREAD_POOLS_5b_27QUEUE_27_5d = createField("thread_pools['queue']", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>sys.nodes.thread_pools['rejected']</code>.
     */
    public final TableField<NodesRecord, Long> THREAD_POOLS_5b_27REJECTED_27_5d = createField("thread_pools['rejected']", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.nodes.thread_pools['threads']</code>.
     */
    public final TableField<NodesRecord, Integer> THREAD_POOLS_5b_27THREADS_27_5d = createField("thread_pools['threads']", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>sys.nodes.version</code>.
     */
    public final TableField<NodesRecord, Object> VERSION = createField("version", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>sys.nodes.version['build_hash']</code>.
     */
    public final TableField<NodesRecord, String> VERSION_5b_27BUILD_HASH_27_5d = createField("version['build_hash']", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>sys.nodes.version['build_snapshot']</code>.
     */
    public final TableField<NodesRecord, Boolean> VERSION_5b_27BUILD_SNAPSHOT_27_5d = createField("version['build_snapshot']", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>sys.nodes.version['number']</code>.
     */
    public final TableField<NodesRecord, String> VERSION_5b_27NUMBER_27_5d = createField("version['number']", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>sys.nodes</code> table reference
     */
    public Nodes() {
        this("nodes", null);
    }

    /**
     * Create an aliased <code>sys.nodes</code> table reference
     */
    public Nodes(String alias) {
        this(alias, NODES);
    }

    private Nodes(String alias, Table<NodesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Nodes(String alias, Table<NodesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Nodes as(String alias) {
        return new Nodes(alias, this);
    }

    /**
     * Rename this table
     */
    public Nodes rename(String name) {
        return new Nodes(name, null);
    }
}
