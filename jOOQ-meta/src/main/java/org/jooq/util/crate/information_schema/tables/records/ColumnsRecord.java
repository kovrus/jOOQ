/**
 * This class is generated by jOOQ
 */
package org.jooq.util.crate.information_schema.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;
import org.jooq.util.crate.information_schema.tables.Columns;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ColumnsRecord extends TableRecordImpl<ColumnsRecord> implements Record7<String, String, String, Boolean, Short, String, String> {

    private static final long serialVersionUID = -1149567317;

    /**
     * Setter for <code>information_schema.columns.column_name</code>.
     */
    public void setColumnName(String value) {
        setValue(0, value);
    }

    /**
     * Getter for <code>information_schema.columns.column_name</code>.
     */
    public String getColumnName() {
        return (String) getValue(0);
    }

    /**
     * Setter for <code>information_schema.columns.data_type</code>.
     */
    public void setDataType(String value) {
        setValue(1, value);
    }

    /**
     * Getter for <code>information_schema.columns.data_type</code>.
     */
    public String getDataType() {
        return (String) getValue(1);
    }

    /**
     * Setter for <code>information_schema.columns.generation_expression</code>.
     */
    public void setGenerationExpression(String value) {
        setValue(2, value);
    }

    /**
     * Getter for <code>information_schema.columns.generation_expression</code>.
     */
    public String getGenerationExpression() {
        return (String) getValue(2);
    }

    /**
     * Setter for <code>information_schema.columns.is_generated</code>.
     */
    public void setIsGenerated(Boolean value) {
        setValue(3, value);
    }

    /**
     * Getter for <code>information_schema.columns.is_generated</code>.
     */
    public Boolean getIsGenerated() {
        return (Boolean) getValue(3);
    }

    /**
     * Setter for <code>information_schema.columns.ordinal_position</code>.
     */
    public void setOrdinalPosition(Short value) {
        setValue(4, value);
    }

    /**
     * Getter for <code>information_schema.columns.ordinal_position</code>.
     */
    public Short getOrdinalPosition() {
        return (Short) getValue(4);
    }

    /**
     * Setter for <code>information_schema.columns.schema_name</code>.
     */
    public void setSchemaName(String value) {
        setValue(5, value);
    }

    /**
     * Getter for <code>information_schema.columns.schema_name</code>.
     */
    public String getSchemaName() {
        return (String) getValue(5);
    }

    /**
     * Setter for <code>information_schema.columns.table_name</code>.
     */
    public void setTableName(String value) {
        setValue(6, value);
    }

    /**
     * Getter for <code>information_schema.columns.table_name</code>.
     */
    public String getTableName() {
        return (String) getValue(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, String, String, Boolean, Short, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, String, String, Boolean, Short, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Columns.COLUMNS.COLUMN_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Columns.COLUMNS.DATA_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Columns.COLUMNS.GENERATION_EXPRESSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field4() {
        return Columns.COLUMNS.IS_GENERATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field5() {
        return Columns.COLUMNS.ORDINAL_POSITION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Columns.COLUMNS.SCHEMA_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Columns.COLUMNS.TABLE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getColumnName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getDataType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getGenerationExpression();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value4() {
        return getIsGenerated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value5() {
        return getOrdinalPosition();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getSchemaName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getTableName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnsRecord value1(String value) {
        setColumnName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnsRecord value2(String value) {
        setDataType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnsRecord value3(String value) {
        setGenerationExpression(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnsRecord value4(Boolean value) {
        setIsGenerated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnsRecord value5(Short value) {
        setOrdinalPosition(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnsRecord value6(String value) {
        setSchemaName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnsRecord value7(String value) {
        setTableName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnsRecord values(String value1, String value2, String value3, Boolean value4, Short value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ColumnsRecord
     */
    public ColumnsRecord() {
        super(Columns.COLUMNS);
    }

    /**
     * Create a detached, initialised ColumnsRecord
     */
    public ColumnsRecord(String columnName, String dataType, String generationExpression, Boolean isGenerated, Short ordinalPosition, String schemaName, String tableName) {
        super(Columns.COLUMNS);

        setValue(0, columnName);
        setValue(1, dataType);
        setValue(2, generationExpression);
        setValue(3, isGenerated);
        setValue(4, ordinalPosition);
        setValue(5, schemaName);
        setValue(6, tableName);
    }
}
