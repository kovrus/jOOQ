/**
 * This class is generated by jOOQ
 */
package org.jooq.util.crate.information_schema.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;
import org.jooq.util.crate.information_schema.tables.TableConstraints;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TableConstraintsRecord extends TableRecordImpl<TableConstraintsRecord> implements Record4<String[], String, String, String> {

    private static final long serialVersionUID = -1232247687;

    /**
     * Setter for <code>information_schema.table_constraints.constraint_name</code>.
     */
    public void setConstraintName(String[] value) {
        setValue(0, value);
    }

    /**
     * Getter for <code>information_schema.table_constraints.constraint_name</code>.
     */
    public String[] getConstraintName() {
        return (String[]) getValue(0);
    }

    /**
     * Setter for <code>information_schema.table_constraints.constraint_type</code>.
     */
    public void setConstraintType(String value) {
        setValue(1, value);
    }

    /**
     * Getter for <code>information_schema.table_constraints.constraint_type</code>.
     */
    public String getConstraintType() {
        return (String) getValue(1);
    }

    /**
     * Setter for <code>information_schema.table_constraints.schema_name</code>.
     */
    public void setSchemaName(String value) {
        setValue(2, value);
    }

    /**
     * Getter for <code>information_schema.table_constraints.schema_name</code>.
     */
    public String getSchemaName() {
        return (String) getValue(2);
    }

    /**
     * Setter for <code>information_schema.table_constraints.table_name</code>.
     */
    public void setTableName(String value) {
        setValue(3, value);
    }

    /**
     * Getter for <code>information_schema.table_constraints.table_name</code>.
     */
    public String getTableName() {
        return (String) getValue(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String[], String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String[], String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field1() {
        return TableConstraints.TABLE_CONSTRAINTS.CONSTRAINT_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return TableConstraints.TABLE_CONSTRAINTS.CONSTRAINT_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return TableConstraints.TABLE_CONSTRAINTS.SCHEMA_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return TableConstraints.TABLE_CONSTRAINTS.TABLE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value1() {
        return getConstraintName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getConstraintType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getSchemaName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getTableName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TableConstraintsRecord value1(String[] value) {
        setConstraintName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TableConstraintsRecord value2(String value) {
        setConstraintType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TableConstraintsRecord value3(String value) {
        setSchemaName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TableConstraintsRecord value4(String value) {
        setTableName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TableConstraintsRecord values(String[] value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TableConstraintsRecord
     */
    public TableConstraintsRecord() {
        super(TableConstraints.TABLE_CONSTRAINTS);
    }

    /**
     * Create a detached, initialised TableConstraintsRecord
     */
    public TableConstraintsRecord(String[] constraintName, String constraintType, String schemaName, String tableName) {
        super(TableConstraints.TABLE_CONSTRAINTS);

        setValue(0, constraintName);
        setValue(1, constraintType);
        setValue(2, schemaName);
        setValue(3, tableName);
    }
}
